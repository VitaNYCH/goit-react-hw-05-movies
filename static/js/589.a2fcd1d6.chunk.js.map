{"version":3,"file":"static/js/589.a2fcd1d6.chunk.js","mappings":"6RAEaA,EAAaC,EAAAA,EAAAA,MAAH,6LAUVC,EAAYD,EAAAA,EAAAA,KAAH,kF,SCuFtB,EA/Fe,WAAO,IAAD,EAGnB,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,EAAO,UAAGJ,EAAaK,IAAI,kBAApB,QAAkC,GAC/CC,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAGAC,EAAS,mCAAG,8FAASV,EAAT,EAASA,QAAT,SACMW,MAAM,mDAAD,OAC0BX,EAD1B,8CAEzBK,GAHc,WACVO,EADU,QAKHC,GALG,sBAMR,IAAIC,MAAM,mBANF,gCAQTF,EAAQG,QARC,2CAAH,sDAWTC,EAAW,mCAAG,6GAEGN,EAAU,CAAEV,QAAAA,IAFf,UAEViB,EAFU,OAGhBf,QAAQC,IAAIc,EAAKL,SACW,IAAxBK,EAAKL,QAAQM,OAJD,sBAKRJ,MAAM,oBALE,OAOhBtB,GAAU,SAAA2B,GAAS,wBAAQA,IAAR,OAAsBF,EAAKL,SAA3B,IAPH,kDAShBlB,EAAS,KAAM0B,SATC,0DAAH,qDAYjBJ,GACD,GAAE,CAAChB,IASJE,QAAQC,IAAIZ,GACZW,QAAQC,IAAIV,GAcZ,OACE,4BACE,UAACJ,EAAD,CAAWgC,SAfM,SAAAC,GACnBA,EAAEC,iBACqB,KAAnBvB,EAAQwB,QAIZ3B,EAAgBG,GAChBR,EAAU,KAJRiC,MAAM,wBAKT,EAOG,WACE,SAACtC,EAAD,CACEuC,KAAK,OACLC,YAAY,kBACZC,MAAO5B,EACP6B,SA7BkB,SAAAC,GAExB,GADA5B,QAAQC,IAAI2B,EAAIC,OAAOH,OACE,KAArBE,EAAIC,OAAOH,MACb,OAAO/B,EAAgB,CAAC,GAE1BA,EAAgB,CAAEG,QAAS8B,EAAIC,OAAOH,OACvC,KAyBK,mBAAQF,KAAK,SAAb,UACE,SAAC,MAAD,CAAUM,MAAO,CAAEC,MAAO,GAAIC,OAAQ,YAG1C,wBACG3C,EAAO4C,KAAI,YAAmC,IAAhCC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,eAAgBC,EAAW,EAAXA,KACjC,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKhD,GAAUiD,MAAO,CAAEC,KAAM3C,GAAtC,SACGuC,GAAkBC,KAFdF,EAMZ,QAIR,C","sources":["pages/Movie.styled.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MovieInput = styled.input`\n  display: inline-block;\n  width: 200px;\n  height: 27px;\n  margin-left: 40px;\n  font: inherit;\n  font-size: 14px;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\nexport const MovieForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { FaSearch } from 'react-icons/fa';\nimport { MovieInput, MovieForm } from './Movie.styled';\nconst Movies = () => {\n  // const [movies, setMovies] = useState(['movie - 1', 'movie - 2', 'movie - 3']);\n\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n  const movieId = searchParams.get('movieId') ?? '';\n  console.log(movieId);\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5MWEwMDkyODI0OWM4YmMyYmJkMjZkYzlhYTAyZjdiZSIsInN1YiI6IjY0ODcyNTQ3ZTI3MjYwMDE0N2JhZjQ3NSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.jrQFhg3zIzgrcOgT3KJMhk2fc76vvqhqSwZS0bI1EK4',\n      },\n    };\n    const getMovies = async ({ movieId }) => {\n      const results = await fetch(\n        `https://api.themoviedb.org/3/search/movie?query=${movieId}&include_adult=false&language=en-US&page=1`,\n        options\n      );\n      if (!results.ok) {\n        throw new Error('Smth went wrong');\n      }\n      return results.json();\n    };\n\n    const fetchMovies = async () => {\n      try {\n        const data = await getMovies({ movieId });\n        console.log(data.results);\n        if (data.results.length === 0) {\n          throw Error('No matches found');\n        }\n        setMovies(prevMovie => [...prevMovie, ...data.results]);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchMovies();\n  }, [movieId]);\n\n  const updateQueryString = evt => {\n    console.log(evt.target.value);\n    if (evt.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ movieId: evt.target.value });\n  };\n  console.log(movies);\n  console.log(error);\n  const handelSubmit = e => {\n    e.preventDefault();\n    if (movieId.trim() === '') {\n      alert('Please enter the name');\n      return;\n    }\n    setSearchParams(movieId);\n    setMovies([]);\n  };\n  // const visibleMovie = results.filter(original_title =>\n  //   movie.includes(movieId)\n  // );\n\n  return (\n    <div>\n      <MovieForm onSubmit={handelSubmit}>\n        <MovieInput\n          type=\"text\"\n          placeholder=\"Search by name \"\n          value={movieId}\n          onChange={updateQueryString}\n        />\n        <button type=\"submit\">\n          <FaSearch style={{ width: 24, height: 24 }} />\n        </button>\n      </MovieForm>\n      <ul>\n        {movies.map(({ id, original_title, name }) => {\n          return (\n            <li key={id}>\n              <Link to={`${movies}`} state={{ from: location }}>\n                {original_title || name}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["MovieInput","styled","MovieForm","useState","movies","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","location","useLocation","movieId","get","console","log","useEffect","options","method","headers","accept","Authorization","getMovies","fetch","results","ok","Error","json","fetchMovies","data","length","prevMovie","message","onSubmit","e","preventDefault","trim","alert","type","placeholder","value","onChange","evt","target","style","width","height","map","id","original_title","name","to","state","from"],"sourceRoot":""}