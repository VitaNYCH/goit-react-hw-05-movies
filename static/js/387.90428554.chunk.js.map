{"version":3,"file":"static/js/387.90428554.chunk.js","mappings":"wPAEaA,E,OAAgBC,EAAAA,GAAH,yK,SC6C1B,EA5CgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,MACAC,EAAAA,EAAAA,YAAU,WACR,IAEMC,EAAU,mCAAG,WAAMR,GAAN,uFACKS,MAAM,GAAD,OAHZ,gCAGY,iBACLT,EADK,4BAFb,mCAEa,oBADV,WACXU,EADW,QAIJC,GAJI,sBAKT,IAAIC,MAAM,mBALD,gCAOVF,EAAQG,QAPE,2CAAH,sDAUVC,EAAY,mCAAG,6GAEEN,EAAWR,GAFb,WAEXe,EAFW,UAGJ,CAAC,EAHG,sBAITH,MAAM,oBAJG,OAMjBN,EAAWS,GANM,gDAQjBX,EAAS,KAAMY,SARE,yDAAH,qDAYlBF,GACD,GAAE,CAACd,IACJ,IAAMiB,EAAgBZ,EAAQK,QAE9B,OADAQ,QAAQC,IAAIhB,IAEV,+BACGc,QADH,IACGA,OADH,EACGA,EAAeG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAClB,UAACzB,EAAD,YACE,oCAAYwB,MACZ,uBAAIC,MAFcF,EADF,KAQzB,C,sBC9CD,SAASG,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAO9B,GAEP,YADAwB,EAAOxB,EAET,CACI6B,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewElement = styled.li`\n  box-sizing: border-box;\n  border: 5px solid #ff4500;\n  padding: 30px;\n  margin: 0 auto;\n  margin-top: 20px;\n  background-color: #ffdab9;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { ReviewElement } from './Reviews.styled';\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [error, setError] = useState(null);\n  const [reviews, setReviews] = useState('');\n  useEffect(() => {\n    const BASE_URL = 'https://api.themoviedb.org/3/';\n    const API_KEY = '91a00928249c8bc2bbd26dc9aa02f7be';\n    const getReviews = async movieId => {\n      const results = await fetch(\n        `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n      );\n      if (!results.ok) {\n        throw new Error('Smth went wrong');\n      }\n      return results.json();\n    };\n\n    const fetchReviews = async () => {\n      try {\n        const data = await getReviews(movieId);\n        if (data === {}) {\n          throw Error('No matches found');\n        }\n        setReviews(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n  const authorReviews = reviews.results;\n  console.log(error);\n  return (\n    <ul>\n      {authorReviews?.map(({ id, author, content }) => (\n        <ReviewElement key={id}>\n          <p>Author: {author}</p>\n          <p>{content}</p>\n        </ReviewElement>\n      ))}\n    </ul>\n  );\n};\nexport default Reviews;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["ReviewElement","styled","movieId","useParams","useState","error","setError","reviews","setReviews","useEffect","getReviews","fetch","results","ok","Error","json","fetchReviews","data","message","authorReviews","console","log","map","id","author","content","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}