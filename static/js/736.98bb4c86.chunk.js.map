{"version":3,"file":"static/js/736.98bb4c86.chunk.js","mappings":"wPAEaA,E,OAAaC,EAAAA,GAAH,8F,SC0DvB,EAzDa,WACX,IAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAGMC,EAAO,mCAAG,WAAMR,GAAN,uFACQS,MAAM,GAAD,OAJZ,gCAIY,iBACLT,EADK,4BAHb,mCAGa,oBADb,WACRU,EADQ,QAIDC,GAJC,sBAKN,IAAIC,MAAM,mBALJ,gCAOPF,EAAQG,QAPD,2CAAH,sDAUPC,EAAS,mCAAG,6GAEKN,EAAQR,GAFb,WAERe,EAFQ,UAGD,CAAC,EAHA,sBAINH,MAAM,oBAJA,OAMdN,EAAWS,GANG,gDAQdX,EAAS,KAAMY,SARD,yDAAH,qDAYfF,GACD,GAAE,CAACd,IACJiB,QAAQC,IAAIf,GACZ,IAAMgB,EAAcd,EAAQe,KAC5B,OACE,+BACGD,QADH,IACGA,OADH,EACGA,EAAaE,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,GAAlC,OAChB,UAAC3B,EAAD,YACE,gBACE4B,IAAG,UACDF,EA1CI,mCA2CUA,EACVG,2DAHH,KAKHC,MAAO,IACPC,IAAI,oBAEN,uBAAIP,KACJ,uCAAeC,OAXAE,EADD,KAiBvB,C,sBC3DD,SAASK,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOpC,GAEP,YADA8B,EAAO9B,EAET,CACImC,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastMember = styled.li`\n  margin: 0;\n  margin-top: 20px;\n  border-bottom: dotted 2px grey;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { CastMember } from './Cast.styled';\nconst Cast = () => {\n  const PIC_URL = 'https://image.tmdb.org/t/p/w500/';\n  const PLACEHOLDER = 'https://via.placeholder.com/182x273';\n  const { movieId } = useParams();\n  const [error, setError] = useState(null);\n  const [members, setMembers] = useState('');\n\n  useEffect(() => {\n    const BASE_URL = 'https://api.themoviedb.org/3/';\n    const API_KEY = '91a00928249c8bc2bbd26dc9aa02f7be';\n\n    const getCast = async movieId => {\n      const results = await fetch(\n        `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n      );\n      if (!results.ok) {\n        throw new Error('Smth went wrong');\n      }\n      return results.json();\n    };\n\n    const fetchCast = async () => {\n      try {\n        const data = await getCast(movieId);\n        if (data === {}) {\n          throw Error('No matches found');\n        }\n        setMembers(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n  console.log(error);\n  const castMembers = members.cast;\n  return (\n    <ul>\n      {castMembers?.map(({ name, character, profile_path, id }) => (\n        <CastMember key={id}>\n          <img\n            src={`${\n              profile_path\n                ? PIC_URL + profile_path\n                : PLACEHOLDER + '?text= no image found'\n            } `}\n            width={120}\n            alt=\"member of cast\"\n          />\n          <p>{name}</p>\n          <p>Character: {character}</p>\n        </CastMember>\n      ))}\n    </ul>\n  );\n};\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["CastMember","styled","movieId","useParams","useState","error","setError","members","setMembers","useEffect","getCast","fetch","results","ok","Error","json","fetchCast","data","message","console","log","castMembers","cast","map","name","character","profile_path","id","src","PLACEHOLDER","width","alt","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}